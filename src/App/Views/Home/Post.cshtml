@model App.Models.PostpageModel;
@using App.Authorization;
@using Westwind.AspNetCore.Markdown
@{
    ViewData["Title"] = Model.Post.Title;
}

<div class="content">
    <article>
        <h2>@Html.DisplayFor(m => m.Post.Title)</h2>
        <h3>@Html.DisplayFor(m => m.Post.PostedOn)</h3>
        <div class="postBody">
            @Html.Raw(Markdown.Parse(Model.Post.Body))
        </div>
        @if (!string.IsNullOrWhiteSpace(Model.Post.MoreInside))
        {
            <hr>
            <div class="moreInside">
                @Html.Raw(Markdown.Parse(Model.Post.MoreInside))
            </div>
        }
        <div class="logline">
            Posted by <a href="#">@Html.DisplayFor(m => m.Post.PostedBy.UserName)</a>
            (@Model.Post.Comments.Count comments total)
        </div>
    </article>

    <div id="comments">
        @foreach (var comment in Model.Post.Comments)
        {
            <div class="comment" id="@comment.ID">
                @Html.Raw(Markdown.Parse(comment.Body))
                <div class="logline">
                    Posted by <a href="#">@Html.DisplayFor(_ => comment.PostedBy.UserName)</a>
                    on @Html.DisplayFor(_ => comment.PostedOn)
                </div>
            </div>
        }

        @if ((await AuthorizationService.AuthorizeAsync(User, Policy.MakeComment)).Succeeded)
        {
            <hr>
            <form method="post" action="@Model.Post.Number/comment">
                <div class="form-input">
                    <label for="body">Comment</label>
                    <textarea name="body" rows="15" cols="60"></textarea>
                </div>
                <button type="submit">Post Comment</button>
            </form> 
        } else {
            <p>Please <a href="/login?returnUrl=/@Model.Post.Number">Log In</a> to make a comment</p>
        }
    </div>

</div>